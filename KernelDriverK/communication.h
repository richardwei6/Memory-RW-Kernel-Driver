#pragma once
#include <ntifs.h>
#include "structs.h"

// DEFINE BELOW IN USERMODE
#define IO_GET_CLIENTADDRESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x100, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) // client.dll
#define IO_GET_ENGINEADDRESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x101, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) // engine.dll

#define IO_READVIRTUALMEMORY CTL_CODE(FILE_DEVICE_UNKNOWN, 0x102, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) // read
#define IO_WRITEVIRTUALMEMORY CTL_CODE(FILE_DEVICE_UNKNOWN, 0x103, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) // write

#define IO_GET_PID CTL_CODE(FILE_DEVICE_UNKNOWN, 0x104, METHOD_BUFFERED, FILE_SPECIAL_ACCESS) // pid

// END DEFINE

NTSTATUS IoControl(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS CloseCall(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS CreateCall(PDEVICE_OBJECT DeviceObject, PIRP Irp);

